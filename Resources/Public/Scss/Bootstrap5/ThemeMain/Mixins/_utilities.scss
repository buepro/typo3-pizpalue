//
// Create a responsive space.
// $properties is treated as a list.
// Usage: pp-make-spaces(padding-top, 3rem) or pp-make-spaces((padding-top, padding-bottom), 3rem)
//
@mixin pp-make-spaces($properties, $value, $valueBreakpoint: xl, $scaling: $pp-space-scaling) {
    $breakpointScaling: map_get($scaling, $valueBreakpoint);
    $space: $value / $breakpointScaling * map_get($scaling, xs);
    $space: round($space * 100) / 100;
    @each $property in $properties {
        #{$property}: $space;
    }
    @each $breakpoint, $scale in $scaling {
        @if ($breakpoint != xs) {
            @include media-breakpoint-up($breakpoint) {
                $space: $value / $breakpointScaling * map_get($scaling, $breakpoint);
                $space: round($space * 100) / 100;
                @each $property in $properties {
                    #{$property}: $space;
                }
            }
        }
    }
}

//
// Used to create links in elements with a frame background (see $frame-backgrounds)
// In case `$link-color = inherit` the link is further defined with `inherit-link-style`:
//    `dotted`: The link is shown with dotted underline (default behaviour, applies if `inherit-link-style` is absent)
//    `bold`: The link is shown with `font-weight: bold`
//    `user`: User formats the link separately (nothing special is formatted here)
//
@mixin pp-make-link($settings) {
    $temp-color: map-get($settings, 'color');
    $temp-link-color: map-get($settings, 'link-color');
    $temp-link-hover-color: map-get($settings, 'link-hover-color');
    $temp-inherit-link-style: map-get($settings, 'inherit-link-style');
    @if ($temp-link-color != 'inherit') {
        a:not(.btn) {
            color: $temp-link-color;

            &:hover {
                color: $temp-link-hover-color;
            }
        }
    } @else {
        a:not(.btn) {
            color: $temp-color;
            &:hover {
                color: $temp-color;
            }
            @if ($temp-inherit-link-style == 'bold') {
                font-weight: bold;
            }
            @if ($temp-inherit-link-style == 'dotted') {
                text-decoration: underline;
                text-decoration-style: dotted;
            }
        }
    }
}

//
// Usage: @include pp-make-background(map-get($frame-backgrounds, primary))
// Remark: The headings color wasn't correct when $headings-color was defined
// @see 1637252856
// @see bootstrap_package make-frame-background
//
@mixin pp-make-background($settings) {
    $temp-background: map-get($settings, 'background');
    background-color: $temp-background;
    $temp-color: color-contrast($temp-background);
    @if (map-get($settings, 'color')) {
        $temp-color: map-get($settings, 'color');
    }
    color: $temp-color;
    .element-header, .element-subheader {
        $color: color-contrast(map-get($settings, 'background'));
        @if (map-get($settings, 'headings-color')) {
            $color: map-get($settings, 'headings-color');
        }
        color: $color;
    }
    @include pp-make-link($settings);
}
