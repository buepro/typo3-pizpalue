/**
 * Josh.js - A JavaScript library to animate content on page scroll.
 * Version: 1.0.8
 * Author: Al Mamun
 * License: MIT
 * Repo: https://github.com/mamunhpath/josh.js
 * Demo: https://mamunhpath.github.io/josh.js
 */

"use strict";var _createClass=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var Josh=function(){function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];_classCallCheck(this,t),this.initClass=e.initClass||"josh-js",this.initDom=document.querySelectorAll("."+this.initClass),this.animClass=e.animClass||"animate__animated",this.offset=e.offset||.2,this.animateInMobile=void 0===e.animateInMobile||e.animateInMobile,this.onDOMChange=void 0!==e.onDOMChange&&e.onDOMChange,this.intersectOnScroll(this.initDom),this.callOnDOMChange(),this.addCss(this.initDom)}return _createClass(t,[{key:"intersectionObserverCallback",value:function(e,o){var r=!this.animateInMobile&&this.isMobile();e.forEach(function(e){var t=e.target,n=t.dataset.joshAnimName,i=t.dataset.joshIteration,s=t.dataset.joshDuration,a=t.dataset.joshDelay;e.isIntersecting&&(a="visibility: visible;animation-name: "+n+";animation-duration: "+s+";animation-iteration-count: "+i+";animation-delay: "+a+";",r||(t.style=t.style.cssText+a),o.unobserve(t))})}},{key:"addCss",value:function(e){var t=this;0<e.length?e.forEach(function(e){t.cssUtil(e)}):this.cssUtil(e)}},{key:"cssUtil",value:function(e){var t=!this.animateInMobile&&this.isMobile();e.classList.add(this.animClass),t||(e.style=e.style.cssText+"visibility: hidden")}},{key:"intersectOnScroll",value:function(e){var t,n=this;if(!("IntersectionObserver"in window))throw new Error("IntersectionObserver is not support by this browser. Try by adding pollyfil or use other library.");t=new IntersectionObserver(n.intersectionObserverCallback.bind(n),{root:null,rootMargin:"0px",threshold:n.offset}),0<e.length?e.forEach(function(e){t.observe(e)}):t.observe(e)}},{key:"callOnDOMChange",value:function(){var t=this;window.addEventListener("DOMContentLoaded",function(){t.onDOMChange&&new MutationObserver(function(e){e.forEach(function(e){e=e.addedNodes;null!==e&&e.forEach(function(e){t.addCss(e),t.intersectOnScroll(e)})})}).observe(document.body,{childList:!0,subtree:!0})})}},{key:"isMobile",value:function(){return/Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}}]),t}();